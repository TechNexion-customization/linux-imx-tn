/*
 * Copyright 2018 Technexion Ltd.
 * Copyright 2017 NXP
 *
 * Author: Richard Hu <richard.hu@technexion.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include "pico-8m.dts"

/ {
	backlight_mipi {
		status = "okay";
	};
};

&hdmi {
	status = "disabled";
};

&dcss {
	status = "okay";
	disp-dev = "mipi_disp";

	clocks = <&clk IMX8MQ_CLK_DISP_APB_ROOT>,
		 <&clk IMX8MQ_CLK_DISP_AXI_ROOT>,
		 <&clk IMX8MQ_CLK_DISP_RTRM_ROOT>,
		 <&clk IMX8MQ_CLK_DC_PIXEL_DIV>,
		 <&clk IMX8MQ_CLK_DUMMY>,
		 <&clk IMX8MQ_CLK_DISP_DTRC_DIV>;
	clock-names = "apb", "axi", "rtrm", "pix_div", "pix_out", "dtrc";

	assigned-clocks = <&clk IMX8MQ_CLK_DC_PIXEL_SRC>,
			  <&clk IMX8MQ_CLK_DISP_AXI_SRC>,
			  <&clk IMX8MQ_CLK_DISP_RTRM_SRC>,
			  <&clk IMX8MQ_CLK_DISP_RTRM_PRE_DIV>,
			  <&clk IMX8MQ_VIDEO_PLL1_REF_SEL>,
			  <&clk IMX8MQ_VIDEO_PLL1>;
	assigned-clock-parents = <&clk IMX8MQ_VIDEO_PLL1_OUT>,
				 <&clk IMX8MQ_SYS1_PLL_800M>,
				 <&clk IMX8MQ_SYS1_PLL_800M>,
				 <&clk IMX8MQ_VIDEO_PLL1_OUT>,
				 <&clk IMX8MQ_CLK_25M>;
	assigned-clock-rates = <600000000>,
			       <800000000>,
			       <400000000>,
			       <400000000>,
			       <0>,
			       <599999999>;

	port@0 {
		reg = <0>;

		dcss_disp0_mipi_dsi: mipi_dsi_endpoint {
			remote-endpoint = <&mipi_dsi_in>;
		};
	};
};

&mipi_dsi_phy {
	status = "okay";
};

&mipi_dsi {
	status = "okay";
	pwr-delay = <10>;
	best-match;

	assigned-clocks = <&clk IMX8MQ_CLK_DSI_PHY_REF_SRC>,
						<&clk IMX8MQ_CLK_DSI_CORE_SRC>,
						<&clk IMX8MQ_VIDEO_PLL1_REF_SEL>,
						<&clk IMX8MQ_VIDEO_PLL1>;
	assigned-clock-parents = <&clk IMX8MQ_VIDEO_PLL1_OUT>,
								<&clk IMX8MQ_SYS1_PLL_266M>,
								<&clk IMX8MQ_CLK_25M>;
	assigned-clock-rates = <24000000>,
							<266000000>,
							<0>,
							<599999999>;

	port@1 {
		mipi_dsi_in: dcss_disp_endpoint {
			remote-endpoint = <&dcss_disp0_mipi_dsi>;
		};
	};
};

&mipi_dsi_bridge {
	status = "okay";

	panel@0 {
		reg = <0>;
		compatible = "innolux,hj070na";
		/* backlight = <&backlight>; */
		/* pinctrl-0 = <&pinctrl_mipi_dsi_rst>; */
		/* enable-gpios = <&gpio3 17 GPIO_ACTIVE_HIGH>; */
		dsi,lanes = <4>;
		panel-width-mm  = <153>;
		panel-height-mm = <90>;

		port {
			panel_in: endpoint {
				remote-endpoint = <&mipi_dsi_bridge_out>;
			};
		};
	};

	port@1 {
		mipi_dsi_bridge_out: endpoint {
			remote-endpoint = <&panel_in>;
		};
	};
};

&i2c3 {
	dsi_lvds_bridge: sn65dsi84@2c {
		reg = <0x2c>;
		status = "okay";
		compatible = "ti,sn65dsi84";
		#gpio-cells = <2>;
		enable-gpios = <&gpio3 17 GPIO_ACTIVE_HIGH>; /* <&pinctrl_mipi_dsi_rst>; */
		sn65dsi84,addresses = <0x09 0x0A 0x0B 0x0D
		                       0x10 0x11 0x12 0x13
                               0x18 0x19 0x1A 0x1B
                               0x20 0x21 0x22 0x23
                               0x24 0x25 0x26 0x27
                               0x28 0x29 0x2A 0x2B
                               0x2C 0x2D 0x2E 0x2F
                               0x30 0x31 0x32 0x33
                               0x34 0x35 0x36 0x37
                               0x38 0x39 0x3A 0x3B
                               0x3C 0x3D 0x3E 0x0D>;

		sn65dsi84,values = </* reset and clock registers */
		                    0x00 0x03 0x10 0x00
                            /* DSI registers */
		                    0x26 0x00 0x1e 0x00
		                    /* LVDS registers */
                            0x7a 0x00 0x03 0x00

                            /* video registers */
                            /* cha-al-len-l, cha-al-len-h, chb-al-len-l, chb-al-len-h */
                            0x00 0x04 0x00 0x00
                            /* cha-v-ds-l, cha-v-ds-h, chb-v-ds-l, chb-v-ds-h */
                            0x00 0x00 0x00 0x00
                            /* cha-sdl, cha-sdh, chb-sdl, chb-sdh */
                            0x21 0x00 0x00 0x00
                            /* cha-hs-pwl, cha-hs-pwh, chb-hs-pwl, chb-hs-pwh */
                            0x64 0x00 0x00 0x00
                            /* cha-vs-pwl, cha-vs-pwh, chb-vs-pwl, chb-vs-pwh */
                            0x21 0x00 0x00 0x00
                            /* cha-hbp, chb-hbp, cha-vbp, chb-vbp*/
                            0x5a 0x00 0x00 0x00
                            /* cha-hfp, chb-hfp, cha-vfp, chb-vfp*/
                            0x00 0x00 0x00 0x00

                            0x00 0x00 0x00 0x01>;
	};
};
